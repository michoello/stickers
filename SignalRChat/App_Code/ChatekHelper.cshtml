
@helper Chatek(ModelNS.Model model)
{

    <script src="/Scripts/JQuery/jquery.signalR-2.2.0.min.js"></script>
    
    <style scoped>
        .console {
                border: 1px solid #aaffbb;
        }

        #log {
                border: 1px solid #335522;
                font: 12px system;
        }
        
    </style>

    <div class="console">
        <input type="text" id="message" />
        <input type="submit" id="sendmessage" value="Send" />
        <input type="hidden" id="displayname" />
        <input type="button" onclick="javascript: $('#log').toggle()" value="toggle" />
        <input type="button" onclick="javascript: createCopy()" value="frame" />
        <input type="button" onclick="javascript: askServer()" value="squares" />
        <!--ul class="log"-->
        <ul id="log">
        </ul>
    </div>

    <!--Reference the autogenerated SignalR hub script. -->
    <script src="/signalr/hubs"></script>

    
    <!--Add script to update the page and send messages.--> 
    <script type="text/javascript">


        var sendToServer = function (cmdType, square) {
                var params = square.data('params');
                delete params['ETag'];
                delete params['RowKey'];
                delete params['PartitionKey'];
                delete params['Timestamp'];

                chat.server.sand(params.id, JSON.stringify({ type: cmdType, data: params }));
        }


        var askServer = function () {
             chat.server.sand('giveme', 'all');
        }

        var createCopy = function() {
                $('<iframe id=copyframe src=@model.url?something=aaa align=right />')
                    .css({
                            position: 'fixed',
                            width: window.innerWidth / 2 + 'px',
                            height: '100%',
                            top: '0px',
                            left: (window.innerWidth / 2 - 1) + 'px'
                    })
                    .appendTo('body');

            createCopy = function () { alert('only once'); }
        }

      var cursor = $('<span id=cursor></span>')
           .css({
               'background-color': 'white',
               'border': 'solid 1px magenta',
               'min-width': '1px'
            });


       function Now() {
            return new Date().getTime();
       }

       var escapeHTML = function(text) {
           'use strict';
           var chr = {
                   '"': '&quot;',
                   '&': '&amp;',
                   '<': '&lt;',
                   '>': '&gt;',
                   ' ': '&nbsp;',
           };
           return text.replace(/./g, function (a) { return a in chr ? chr[a] : a; });
       }

       function Echo() {
           var str = [].slice.call(arguments).map(function (v) {
                 return typeof (v) != 'object' ? v : JSON.stringify(v);
           }).join(' ');

           $('#log').append('<li>' + str + '</li>');

           console.log(str);

           l = $('#log li').size();

           while (l-- > 5)
               $('#log li').eq(0).remove();
       }

       var chat = $.connection.chatHub;
       $(function () {
            // Declare a proxy to reference the hub. 

            // Create a function that the hub can call to broadcast messages.
               chat.client.broadcastMessage = function (name, message) {
                       Echo(name, message, "puzo");
               };



            // Get the user name and store it to prepend to messages.
            /*
            $('#displayname').val(prompt('Enter your name:', ''));
            var username = $('#displayname').val();
            */
            var username = "masta";

            $('#message').focus();

            $.connection.hub.start().done(function () {

                askServer();

                chat.server.send(username, "ented the chat yo!");

                $(window).unload(function () {
                    chat.server.send(username, "left the chat yo!");
                });

                $('#sendmessage').click(function () {
                    // Call the Send method on the hub. 
                    chat.server.send(username, $('#message').val());
                    $('#message').val('').focus();
                });
            });
        });
    </script>



}